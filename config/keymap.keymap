#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &none             &none     &none     &none           &none                                       &none        &none  &none     &none      &none         &none
&none  &kp Q             &kp W     &kp E     &kp R           &kp T                                       &kp Y        &kp U  &kp I     &kp O      &kp P         &none
&none  &kp A             &kp S     &kp D     &kp F           &kp G        &none           &none          &kp H        &kp J  &kp K     &kp L      &kp MINUS     &none
&none  &kp Z             &kp X     &kp C     &kp V           &kp B        &kp SPACE       &kp RET        &kp N        &kp M  &mkp MB1  &kp COMMA  &kp PERIOD    &none
&none  &kp LEFT_CONTROL  &kp LGUI  &kp LALT  &kp LEFT_SHIFT  &lt 1 SPACE  &lt 3 CAPSLOCK  &kp BACKSPACE  &lt 2 ENTER  &none  &none     &kp A      &kp TAB       &none
            >;
        };

        layer_1 {
            bindings = <
&none  &none          &none          &none             &none            &none                             &none          　　  &none                 &none                  &none             &none              &none
&none  &kp LS(N5)     &none          &kp LS(YEN)       &kp LS(N6)       &kp EQUAL                         &kp LEFT_BRACKET   　&kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp LS(G) &kp COLON      　　&none
&none  &kp LS(RO)     &kp LS(N3)     &kp LS(MINUS)     &kp LS(SEMICOLON) &kp LS(COLON)  &none   &none     &kp SLASH      　　　&kp LS(N8)            &kp LS(N9)             &kp LS(CARET)     &kp LS(RO)         &none
&none  &kp LS(N4)     &kp LS(COMMA)  &kp LS(PERIOD)    &kp LS(N1)       &kp LS(SLASH)  &trans  &trans     &kp LC(SLASH)  　　　&kp RIGHT_BRACKET     &kp LS(BACKSLASH)      &kp LS(N7)        &kp LS(N2)         &none
&none  &trans         &trans         &trans            &trans           &trans        &trans  &kp DELETE  &trans         　　　&none                 &none                  &trans            &kp LS(AT_SIGN)    &none
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans                      &trans               &trans     &trans        &trans     &trans         &trans
&trans  &kp SLASH     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LS(N5)                  &kp INTERNATIONAL_5  &kp HOME   &kp UP_ARROW  &kp END    &none          &trans
&trans  &kp LS(COLON) &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LS(SEMICOLON) &trans  &trans  &kp LC(LEFT)         &kp LEFT   &kp DOWN      &kp RIGHT  &kp LC(RIGHT)  &trans
&trans  &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans  &trans  &kp LC(C)            &kp LG(V)  &mkp MB3      &mkp MB2   &none          &trans
&trans  &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans               &trans     &trans        &trans     &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans           &trans        &trans        &trans         &trans                         &trans  &trans  &trans  &trans  &trans   &trans
&trans  &kp ESCAPE       &kp LG(D)     &kp LEFT_ALT  &none          &kp LC(W)                      &none   &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp LC(S)        &kp LS(TAB)   &kp LCTRL     &kp TAB        &kp LC(T)      &trans  &trans  &none   &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &kp LC(AT_SIGN)  &kp LA(LEFT)  &none         &kp LA(RIGHT)  &kp LC(LS(T))  &trans  &trans  &none   &kp F1  &kp F2  &kp F3  &kp F12  &trans
&trans  &trans           &trans        &trans        &trans         &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };
    };
};
